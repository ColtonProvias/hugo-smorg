.syntax {
  background: #ffffff; }
  .syntax .hll {
    background-color: #ffffcc; }
  .syntax .c {
    color: #95a5a6; }
  .syntax .err {
    color: #a61717; }
  .syntax .k {
    color: #728E00; }
  .syntax .n, .syntax .o {
    color: #434f54; }
  .syntax .ch, .syntax .cm {
    color: #95a5a6; }
  .syntax .cp {
    color: #434f54; }
  .syntax .cpf, .syntax .c1, .syntax .cs {
    color: #95a5a6; }
  .syntax .kc {
    color: #00979D; }
  .syntax .kd, .syntax .kn {
    color: #728E00; }
  .syntax .kp {
    color: #00979D; }
  .syntax .kr {
    color: #728E00; }
  .syntax .kt {
    color: #00979D; }
  .syntax .m {
    color: #434f54; }
  .syntax .s {
    color: #7F8C8D; }
  .syntax .na, .syntax .nb, .syntax .nc, .syntax .no, .syntax .nd, .syntax .ni, .syntax .ne {
    color: #434f54; }
  .syntax .nf {
    color: #D35400; }
  .syntax .nl, .syntax .nn {
    color: #434f54; }
  .syntax .nx {
    color: #728E00; }
  .syntax .py, .syntax .nt, .syntax .nv, .syntax .ow, .syntax .mb, .syntax .mf, .syntax .mh, .syntax .mi, .syntax .mo {
    color: #434f54; }
  .syntax .sb, .syntax .sc, .syntax .sd, .syntax .s2, .syntax .se, .syntax .sh, .syntax .si, .syntax .sx, .syntax .sr, .syntax .s1, .syntax .ss {
    color: #7F8C8D; }
  .syntax .bp, .syntax .vc, .syntax .vg, .syntax .vi, .syntax .il {
    color: #434f54; }

/* Comment */
/* Error */
/* Keyword */
/* Name */
/* Operator */
/* Comment.Hashbang */
/* Comment.Multiline */
/* Comment.Preproc */
/* Comment.PreprocFile */
/* Comment.Single */
/* Comment.Special */
/* Keyword.Constant */
/* Keyword.Declaration */
/* Keyword.Namespace */
/* Keyword.Pseudo */
/* Keyword.Reserved */
/* Keyword.Type */
/* Literal.Number */
/* Literal.String */
/* Name.Attribute */
/* Name.Builtin */
/* Name.Class */
/* Name.Constant */
/* Name.Decorator */
/* Name.Entity */
/* Name.Exception */
/* Name.Function */
/* Name.Label */
/* Name.Namespace */
/* Name.Other */
/* Name.Property */
/* Name.Tag */
/* Name.Variable */
/* Operator.Word */
/* Literal.Number.Bin */
/* Literal.Number.Float */
/* Literal.Number.Hex */
/* Literal.Number.Integer */
/* Literal.Number.Oct */
/* Literal.String.Backtick */
/* Literal.String.Char */
/* Literal.String.Doc */
/* Literal.String.Double */
/* Literal.String.Escape */
/* Literal.String.Heredoc */
/* Literal.String.Interpol */
/* Literal.String.Other */
/* Literal.String.Regex */
/* Literal.String.Single */
/* Literal.String.Symbol */
/* Name.Builtin.Pseudo */
/* Name.Variable.Class */
/* Name.Variable.Global */
/* Name.Variable.Instance */
/* Literal.Number.Integer.Long */
