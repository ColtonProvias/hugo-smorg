.syntax {
  background: #ffffff; }
  .syntax .hll {
    background-color: #ffffcc; }
  .syntax .c {
    color: #666666;
    font-style: italic; }
  .syntax .err {
    color: #FF0000;
    background-color: #FFAAAA; }
  .syntax .k {
    color: #228899;
    font-weight: bold; }
  .syntax .o {
    color: #333333; }
  .syntax .ch, .syntax .cm {
    color: #666666;
    font-style: italic; }
  .syntax .cp {
    color: #557799; }
  .syntax .cpf, .syntax .c1 {
    color: #666666;
    font-style: italic; }
  .syntax .cs {
    color: #cc0000;
    font-weight: bold;
    font-style: italic; }
  .syntax .gd {
    color: #A00000; }
  .syntax .ge {
    font-style: italic; }
  .syntax .gr {
    color: #FF0000; }
  .syntax .gh {
    color: #000080;
    font-weight: bold; }
  .syntax .gi {
    color: #00A000; }
  .syntax .go {
    color: #888888; }
  .syntax .gp {
    color: #c65d09;
    font-weight: bold; }
  .syntax .gs {
    font-weight: bold; }
  .syntax .gu {
    color: #800080;
    font-weight: bold; }
  .syntax .gt {
    color: #0044DD; }
  .syntax .kc, .syntax .kd, .syntax .kn {
    color: #228899;
    font-weight: bold; }
  .syntax .kp {
    color: #0088ff;
    font-weight: bold; }
  .syntax .kr {
    color: #228899;
    font-weight: bold; }
  .syntax .kt {
    color: #6666ff;
    font-weight: bold; }
  .syntax .m {
    color: #6600EE;
    font-weight: bold; }
  .syntax .s {
    background-color: #e0e0ff; }
  .syntax .na {
    color: #000077; }
  .syntax .nb {
    color: #007722; }
  .syntax .nc {
    color: #ee99ee;
    font-weight: bold; }
  .syntax .no {
    color: #55eedd;
    font-weight: bold; }
  .syntax .nd {
    color: #555555;
    font-weight: bold; }
  .syntax .ni {
    color: #880000; }
  .syntax .ne {
    color: #FF0000;
    font-weight: bold; }
  .syntax .nf {
    color: #55eedd;
    font-weight: bold; }
  .syntax .nl {
    color: #997700;
    font-weight: bold; }
  .syntax .nn {
    color: #0e84b5;
    font-weight: bold; }
  .syntax .nt {
    color: #007700; }
  .syntax .nv {
    color: #003366; }
  .syntax .ow {
    color: #000000;
    font-weight: bold; }
  .syntax .w {
    color: #bbbbbb; }
  .syntax .mb, .syntax .mf {
    color: #6600EE;
    font-weight: bold; }
  .syntax .mh {
    color: #005588;
    font-weight: bold; }
  .syntax .mi {
    color: #6666ff;
    font-weight: bold; }
  .syntax .mo {
    color: #4400EE;
    font-weight: bold; }
  .syntax .sb {
    background-color: #e0e0ff; }
  .syntax .sc {
    color: #8888FF; }
  .syntax .sd {
    color: #DD4422; }
  .syntax .s2 {
    background-color: #e0e0ff; }
  .syntax .se {
    color: #666666;
    font-weight: bold;
    background-color: #e0e0ff; }
  .syntax .sh {
    background-color: #e0e0ff; }
  .syntax .si {
    background-color: #eeeeee; }
  .syntax .sx {
    color: #ff8888;
    background-color: #e0e0ff; }
  .syntax .sr {
    color: #000000;
    background-color: #e0e0ff; }
  .syntax .s1 {
    background-color: #e0e0ff; }
  .syntax .ss {
    color: #ffcc88; }
  .syntax .bp {
    color: #007722; }
  .syntax .vc {
    color: #ccccff; }
  .syntax .vg {
    color: #ff8844; }
  .syntax .vi {
    color: #aaaaff; }
  .syntax .il {
    color: #6666ff;
    font-weight: bold; }

/* Comment */
/* Error */
/* Keyword */
/* Operator */
/* Comment.Hashbang */
/* Comment.Multiline */
/* Comment.Preproc */
/* Comment.PreprocFile */
/* Comment.Single */
/* Comment.Special */
/* Generic.Deleted */
/* Generic.Emph */
/* Generic.Error */
/* Generic.Heading */
/* Generic.Inserted */
/* Generic.Output */
/* Generic.Prompt */
/* Generic.Strong */
/* Generic.Subheading */
/* Generic.Traceback */
/* Keyword.Constant */
/* Keyword.Declaration */
/* Keyword.Namespace */
/* Keyword.Pseudo */
/* Keyword.Reserved */
/* Keyword.Type */
/* Literal.Number */
/* Literal.String */
/* Name.Attribute */
/* Name.Builtin */
/* Name.Class */
/* Name.Constant */
/* Name.Decorator */
/* Name.Entity */
/* Name.Exception */
/* Name.Function */
/* Name.Label */
/* Name.Namespace */
/* Name.Tag */
/* Name.Variable */
/* Operator.Word */
/* Text.Whitespace */
/* Literal.Number.Bin */
/* Literal.Number.Float */
/* Literal.Number.Hex */
/* Literal.Number.Integer */
/* Literal.Number.Oct */
/* Literal.String.Backtick */
/* Literal.String.Char */
/* Literal.String.Doc */
/* Literal.String.Double */
/* Literal.String.Escape */
/* Literal.String.Heredoc */
/* Literal.String.Interpol */
/* Literal.String.Other */
/* Literal.String.Regex */
/* Literal.String.Single */
/* Literal.String.Symbol */
/* Name.Builtin.Pseudo */
/* Name.Variable.Class */
/* Name.Variable.Global */
/* Name.Variable.Instance */
/* Literal.Number.Integer.Long */
