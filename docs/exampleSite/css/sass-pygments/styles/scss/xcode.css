.syntax {
  background: #ffffff; }
  .syntax .hll {
    background-color: #ffffcc; }
  .syntax .c {
    color: #177500; }
  .syntax .err {
    color: #000000; }
  .syntax .k {
    color: #A90D91; }
  .syntax .l {
    color: #1C01CE; }
  .syntax .n, .syntax .o {
    color: #000000; }
  .syntax .ch, .syntax .cm {
    color: #177500; }
  .syntax .cp {
    color: #633820; }
  .syntax .cpf, .syntax .c1, .syntax .cs {
    color: #177500; }
  .syntax .kc, .syntax .kd, .syntax .kn, .syntax .kp, .syntax .kr, .syntax .kt {
    color: #A90D91; }
  .syntax .ld, .syntax .m {
    color: #1C01CE; }
  .syntax .s {
    color: #C41A16; }
  .syntax .na {
    color: #836C28; }
  .syntax .nb {
    color: #A90D91; }
  .syntax .nc {
    color: #3F6E75; }
  .syntax .no, .syntax .nd, .syntax .ni, .syntax .ne, .syntax .nf, .syntax .nl, .syntax .nn, .syntax .nx, .syntax .py, .syntax .nt, .syntax .nv, .syntax .ow {
    color: #000000; }
  .syntax .mb, .syntax .mf, .syntax .mh, .syntax .mi, .syntax .mo {
    color: #1C01CE; }
  .syntax .sb {
    color: #C41A16; }
  .syntax .sc {
    color: #2300CE; }
  .syntax .sd, .syntax .s2, .syntax .se, .syntax .sh, .syntax .si, .syntax .sx, .syntax .sr, .syntax .s1, .syntax .ss {
    color: #C41A16; }
  .syntax .bp {
    color: #5B269A; }
  .syntax .vc, .syntax .vg, .syntax .vi {
    color: #000000; }
  .syntax .il {
    color: #1C01CE; }

/* Comment */
/* Error */
/* Keyword */
/* Literal */
/* Name */
/* Operator */
/* Comment.Hashbang */
/* Comment.Multiline */
/* Comment.Preproc */
/* Comment.PreprocFile */
/* Comment.Single */
/* Comment.Special */
/* Keyword.Constant */
/* Keyword.Declaration */
/* Keyword.Namespace */
/* Keyword.Pseudo */
/* Keyword.Reserved */
/* Keyword.Type */
/* Literal.Date */
/* Literal.Number */
/* Literal.String */
/* Name.Attribute */
/* Name.Builtin */
/* Name.Class */
/* Name.Constant */
/* Name.Decorator */
/* Name.Entity */
/* Name.Exception */
/* Name.Function */
/* Name.Label */
/* Name.Namespace */
/* Name.Other */
/* Name.Property */
/* Name.Tag */
/* Name.Variable */
/* Operator.Word */
/* Literal.Number.Bin */
/* Literal.Number.Float */
/* Literal.Number.Hex */
/* Literal.Number.Integer */
/* Literal.Number.Oct */
/* Literal.String.Backtick */
/* Literal.String.Char */
/* Literal.String.Doc */
/* Literal.String.Double */
/* Literal.String.Escape */
/* Literal.String.Heredoc */
/* Literal.String.Interpol */
/* Literal.String.Other */
/* Literal.String.Regex */
/* Literal.String.Single */
/* Literal.String.Symbol */
/* Name.Builtin.Pseudo */
/* Name.Variable.Class */
/* Name.Variable.Global */
/* Name.Variable.Instance */
/* Literal.Number.Integer.Long */
